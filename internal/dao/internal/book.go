// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// BookDao is the data access object for table b_book.
type BookDao struct {
	table   string      // table is the underlying table name of the DAO.
	group   string      // group is the database configuration group name of current DAO.
	columns BookColumns // columns contains all the column names of Table for convenient usage.
}

// BookColumns defines and stores column names for table b_book.
type BookColumns struct {
	Id              string //
	Name            string //
	Writer          string //
	Category        string //
	Icon            string //
	Poster          string //
	Year            string //
	YearStatus      string // 1准确，2大概
	Keywords        string //
	Description     string //
	ShortDesc       string //
	Summary         string // 简介
	Quotations      string // 名言
	RelationBooks   string //
	Visit           string //
	Sort            string //
	RecommendStatus string // 是否推荐 1是 2否
	Status          string //
	KnowledgeStatus string //
	CreatedAt       string //
	UpdatedAt       string //
}

// bookColumns holds the columns for table b_book.
var bookColumns = BookColumns{
	Id:              "id",
	Name:            "name",
	Writer:          "writer",
	Category:        "category",
	Icon:            "icon",
	Poster:          "poster",
	Year:            "year",
	YearStatus:      "year_status",
	Keywords:        "keywords",
	Description:     "description",
	ShortDesc:       "short_desc",
	Summary:         "summary",
	Quotations:      "quotations",
	RelationBooks:   "relation_books",
	Visit:           "visit",
	Sort:            "sort",
	RecommendStatus: "recommend_status",
	Status:          "status",
	KnowledgeStatus: "knowledge_status",
	CreatedAt:       "created_at",
	UpdatedAt:       "updated_at",
}

// NewBookDao creates and returns a new DAO object for table data access.
func NewBookDao() *BookDao {
	return &BookDao{
		group:   "default",
		table:   "b_book",
		columns: bookColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *BookDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *BookDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *BookDao) Columns() BookColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *BookDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *BookDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *BookDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
