// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// EnDocumentDao is the data access object for table e_en_document.
type EnDocumentDao struct {
	table   string            // table is the underlying table name of the DAO.
	group   string            // group is the database configuration group name of current DAO.
	columns EnDocumentColumns // columns contains all the column names of Table for convenient usage.
}

// EnDocumentColumns defines and stores column names for table e_en_document.
type EnDocumentColumns struct {
	Id           string //
	Category1    string //
	Category2    string //
	Title        string //
	En           string //
	Desc         string //
	Icon         string //
	Poster       string //
	WordNum      string // 单词个数
	ParagraphNum string // 段落个数
	Sort         string //
	Status       string //
	CreatedAt    string //
	UpdatedAt    string //
}

// enDocumentColumns holds the columns for table e_en_document.
var enDocumentColumns = EnDocumentColumns{
	Id:           "id",
	Category1:    "category_1",
	Category2:    "category_2",
	Title:        "title",
	En:           "en",
	Desc:         "desc",
	Icon:         "icon",
	Poster:       "poster",
	WordNum:      "word_num",
	ParagraphNum: "paragraph_num",
	Sort:         "sort",
	Status:       "status",
	CreatedAt:    "created_at",
	UpdatedAt:    "updated_at",
}

// NewEnDocumentDao creates and returns a new DAO object for table data access.
func NewEnDocumentDao() *EnDocumentDao {
	return &EnDocumentDao{
		group:   "default",
		table:   "e_en_document",
		columns: enDocumentColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *EnDocumentDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *EnDocumentDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *EnDocumentDao) Columns() EnDocumentColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *EnDocumentDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *EnDocumentDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *EnDocumentDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
