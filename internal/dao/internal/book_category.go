// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// BookCategoryDao is the data access object for table b_book_category.
type BookCategoryDao struct {
	table   string              // table is the underlying table name of the DAO.
	group   string              // group is the database configuration group name of current DAO.
	columns BookCategoryColumns // columns contains all the column names of Table for convenient usage.
}

// BookCategoryColumns defines and stores column names for table b_book_category.
type BookCategoryColumns struct {
	Id      string //
	Name    string //
	Icon    string //
	Poster  string //
	Speak   string //
	Mark    string //
	Desc    string //
	BookNum string //
	Sort    string //
	Status  string //
}

// bookCategoryColumns holds the columns for table b_book_category.
var bookCategoryColumns = BookCategoryColumns{
	Id:      "id",
	Name:    "name",
	Icon:    "icon",
	Poster:  "poster",
	Speak:   "speak",
	Mark:    "mark",
	Desc:    "desc",
	BookNum: "book_num",
	Sort:    "sort",
	Status:  "status",
}

// NewBookCategoryDao creates and returns a new DAO object for table data access.
func NewBookCategoryDao() *BookCategoryDao {
	return &BookCategoryDao{
		group:   "default",
		table:   "b_book_category",
		columns: bookCategoryColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *BookCategoryDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *BookCategoryDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *BookCategoryDao) Columns() BookCategoryColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *BookCategoryDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *BookCategoryDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *BookCategoryDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
