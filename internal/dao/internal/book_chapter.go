// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// BookChapterDao is the data access object for table b_book_chapter.
type BookChapterDao struct {
	table   string             // table is the underlying table name of the DAO.
	group   string             // group is the database configuration group name of current DAO.
	columns BookChapterColumns // columns contains all the column names of Table for convenient usage.
}

// BookChapterColumns defines and stores column names for table b_book_chapter.
type BookChapterColumns struct {
	Id            string //
	BookId        string //
	Title         string //
	Sort          string //
	Desc          string //
	Visit         string //
	Content       string //
	ContentLength string // 正文字符数
	Status        string //
	Keywords      string //
	Last          string //
	Next          string //
	CreatedAt     string //
	UpdatedAt     string //
}

// bookChapterColumns holds the columns for table b_book_chapter.
var bookChapterColumns = BookChapterColumns{
	Id:            "id",
	BookId:        "book_id",
	Title:         "title",
	Sort:          "sort",
	Desc:          "desc",
	Visit:         "visit",
	Content:       "content",
	ContentLength: "content_length",
	Status:        "status",
	Keywords:      "keywords",
	Last:          "last",
	Next:          "next",
	CreatedAt:     "created_at",
	UpdatedAt:     "updated_at",
}

// NewBookChapterDao creates and returns a new DAO object for table data access.
func NewBookChapterDao() *BookChapterDao {
	return &BookChapterDao{
		group:   "default",
		table:   "b_book_chapter",
		columns: bookChapterColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *BookChapterDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *BookChapterDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *BookChapterDao) Columns() BookChapterColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *BookChapterDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *BookChapterDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *BookChapterDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
