// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// EnDocumentParagraphWordUserDao is the data access object for table e_en_document_paragraph_word_user.
type EnDocumentParagraphWordUserDao struct {
	table   string                             // table is the underlying table name of the DAO.
	group   string                             // group is the database configuration group name of current DAO.
	columns EnDocumentParagraphWordUserColumns // columns contains all the column names of Table for convenient usage.
}

// EnDocumentParagraphWordUserColumns defines and stores column names for table e_en_document_paragraph_word_user.
type EnDocumentParagraphWordUserColumns struct {
	Id         string //
	WordId     string //
	Uid        string //
	Level      string //
	Count      string //
	StudyDate  string //
	HasBeenAdd string //
}

// enDocumentParagraphWordUserColumns holds the columns for table e_en_document_paragraph_word_user.
var enDocumentParagraphWordUserColumns = EnDocumentParagraphWordUserColumns{
	Id:         "id",
	WordId:     "word_id",
	Uid:        "uid",
	Level:      "level",
	Count:      "count",
	StudyDate:  "study_date",
	HasBeenAdd: "has_been_add",
}

// NewEnDocumentParagraphWordUserDao creates and returns a new DAO object for table data access.
func NewEnDocumentParagraphWordUserDao() *EnDocumentParagraphWordUserDao {
	return &EnDocumentParagraphWordUserDao{
		group:   "default",
		table:   "e_en_document_paragraph_word_user",
		columns: enDocumentParagraphWordUserColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *EnDocumentParagraphWordUserDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *EnDocumentParagraphWordUserDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *EnDocumentParagraphWordUserDao) Columns() EnDocumentParagraphWordUserColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *EnDocumentParagraphWordUserDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *EnDocumentParagraphWordUserDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *EnDocumentParagraphWordUserDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
