// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// EnPracticeWordCountDao is the data access object for table e_en_practice_word_count.
type EnPracticeWordCountDao struct {
	table   string                     // table is the underlying table name of the DAO.
	group   string                     // group is the database configuration group name of current DAO.
	columns EnPracticeWordCountColumns // columns contains all the column names of Table for convenient usage.
}

// EnPracticeWordCountColumns defines and stores column names for table e_en_practice_word_count.
type EnPracticeWordCountColumns struct {
	Id      string //
	Uid     string //
	Level1  string //
	Level2  string //
	Level3  string //
	Level4  string //
	Level5  string //
	Level6  string //
	Level7  string //
	Level8  string //
	Level9  string //
	Level10 string //
}

// enPracticeWordCountColumns holds the columns for table e_en_practice_word_count.
var enPracticeWordCountColumns = EnPracticeWordCountColumns{
	Id:      "id",
	Uid:     "uid",
	Level1:  "level1",
	Level2:  "level2",
	Level3:  "level3",
	Level4:  "level4",
	Level5:  "level5",
	Level6:  "level6",
	Level7:  "level7",
	Level8:  "level8",
	Level9:  "level9",
	Level10: "level10",
}

// NewEnPracticeWordCountDao creates and returns a new DAO object for table data access.
func NewEnPracticeWordCountDao() *EnPracticeWordCountDao {
	return &EnPracticeWordCountDao{
		group:   "default",
		table:   "e_en_practice_word_count",
		columns: enPracticeWordCountColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *EnPracticeWordCountDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *EnPracticeWordCountDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *EnPracticeWordCountDao) Columns() EnPracticeWordCountColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *EnPracticeWordCountDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *EnPracticeWordCountDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *EnPracticeWordCountDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
